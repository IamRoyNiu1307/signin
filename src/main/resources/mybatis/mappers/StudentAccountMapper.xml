<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nsh.signin.dao.StudentAccountMapper">
  <resultMap id="BaseResultMap" type="com.nsh.signin.entity.StudentAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="VARCHAR" property="studentId" />
    <result column="student_password" jdbcType="VARCHAR" property="studentPassword" />
    <result column="openid" jdbcType="VARCHAR" property="openid" />
    <result column="has_registed" jdbcType="INTEGER" property="hasRegisted" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, student_password, openid, has_registed
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from student_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nsh.signin.entity.StudentAccount">
    insert into student_account (id, student_id, student_password, 
      openid, has_registed)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=VARCHAR}, #{studentPassword,jdbcType=VARCHAR}, 
      #{openid,jdbcType=VARCHAR}, #{hasRegisted,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nsh.signin.entity.StudentAccount">
    insert into student_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="studentPassword != null">
        student_password,
      </if>
      <if test="openid != null">
        openid,
      </if>
      <if test="hasRegisted != null">
        has_registed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null">
        #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        #{openid,jdbcType=VARCHAR},
      </if>
      <if test="hasRegisted != null">
        #{hasRegisted,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nsh.signin.entity.StudentAccount">
    update student_account
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="studentPassword != null">
        student_password = #{studentPassword,jdbcType=VARCHAR},
      </if>
      <if test="openid != null">
        openid = #{openid,jdbcType=VARCHAR},
      </if>
      <if test="hasRegisted != null">
        has_registed = #{hasRegisted,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nsh.signin.entity.StudentAccount">
    update student_account
    set student_id = #{studentId,jdbcType=VARCHAR},
      student_password = #{studentPassword,jdbcType=VARCHAR},
      openid = #{openid,jdbcType=VARCHAR},
      has_registed = #{hasRegisted,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>